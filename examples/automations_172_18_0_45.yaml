# Exemples d'automatisations pour votre RMG Rio 4
# NumÃ©ro de sÃ©rie: 1000000097badc1a
# Firmware: 1.1.4
# Configuration: 4 relais + 4 entrÃ©es digitales (DI)

# ============================================
# AUTOMATISATIONS BASÃ‰ES SUR LES ENTRÃ‰ES DIO
# ============================================

automation:
  # Exemple 1: Portail automatique basÃ© sur DIO1 (dÃ©tecteur de voiture)
  - alias: "Portail - Ouverture automatique"
    description: "Ouvre le portail quand une voiture est dÃ©tectÃ©e sur DIO1"
    trigger:
      - platform: state
        entity_id: switch.dio_1
        to: "on"  # Signal dÃ©tectÃ© sur l'entrÃ©e DIO1
    condition:
      # Optionnel: vÃ©rifier l'heure (ex: seulement en journÃ©e)
      - condition: time
        after: "07:00:00"
        before: "22:00:00"
    action:
      - service: rmg_rio4.pulse_relay
        data:
          entity_id: switch.relais_1
          duration: 1.0  # Impulsion d'1 seconde pour le portail

  # Exemple 2: Ã‰clairage basÃ© sur dÃ©tecteur de mouvement (DIO2)
  - alias: "Ã‰clairage automatique extÃ©rieur"
    description: "Active l'Ã©clairage quand mouvement dÃ©tectÃ© sur DIO2"
    trigger:
      - platform: state
        entity_id: switch.dio_2
        to: "on"
    action:
      - service: switch.turn_on
        target:
          entity_id: switch.relais_2
      # Programmer l'extinction aprÃ¨s 5 minutes
      - delay: "00:05:00"
      - service: switch.turn_off
        target:
          entity_id: switch.relais_2

  # Exemple 3: Alarme basÃ©e sur contact de porte (DIO3)
  - alias: "Alarme - Porte ouverte"
    description: "DÃ©clenche l'alarme si la porte s'ouvre la nuit"
    trigger:
      - platform: state
        entity_id: switch.dio_3
        to: "on"  # Contact ouvert = porte ouverte
    condition:
      # Seulement la nuit ou si l'alarme est activÃ©e
      - condition: or
        conditions:
          - condition: time
            after: "22:00:00"
          - condition: time
            before: "06:00:00"
          # Ou si un input_boolean "alarme_active" est ON
          - condition: state
            entity_id: input_boolean.alarme_active
            state: "on"
    action:
      # Activer la sirÃ¨ne sur relais 3
      - service: switch.turn_on
        target:
          entity_id: switch.relais_3
      # Envoyer une notification
      - service: notify.mobile_app_votre_telephone
        data:
          title: "ðŸš¨ ALERTE SÃ‰CURITÃ‰"
          message: "Porte ouverte dÃ©tectÃ©e Ã  {{ now().strftime('%H:%M') }}"
      # ArrÃªter la sirÃ¨ne aprÃ¨s 30 secondes
      - delay: "00:00:30"
      - service: switch.turn_off
        target:
          entity_id: switch.relais_3

  # Exemple 4: Arrosage automatique basÃ© sur capteur d'humiditÃ© (DIO4)
  - alias: "Arrosage automatique"
    description: "Lance l'arrosage si l'humiditÃ© est trop basse sur DIO4"
    trigger:
      - platform: state
        entity_id: switch.dio_4
        to: "off"  # Signal bas = sol sec
        for: "00:30:00"  # Pendant 30 minutes
    condition:
      # Seulement le matin ou le soir
      - condition: or
        conditions:
          - condition: time
            after: "06:00:00"
            before: "09:00:00"
          - condition: time
            after: "18:00:00"
            before: "21:00:00"
    action:
      - service: rmg_rio4.pulse_relay
        data:
          entity_id: switch.relais_4
          duration: 600  # Arrosage pendant 10 minutes

# ============================================
# SCRIPTS UTILES
# ============================================

script:
  # Script pour ouvrir le portail manuellement
  ouvrir_portail:
    alias: "Ouvrir le portail"
    icon: mdi:gate
    sequence:
      - service: rmg_rio4.pulse_relay
        data:
          entity_id: switch.relais_1
          duration: 1.0

  # Script d'urgence : arrÃªter tous les relais
  arret_urgence:
    alias: "ArrÃªt d'urgence - Tous relais OFF"
    icon: mdi:emergency-brake
    sequence:
      - service: switch.turn_off
        target:
          entity_id:
            - switch.relais_1
            - switch.relais_2
            - switch.relais_3
            - switch.relais_4

  # Script de test : cycler tous les relais
  test_relais:
    alias: "Test de tous les relais"
    icon: mdi:test-tube
    sequence:
      - repeat:
          count: 4
          sequence:
            - variables:
                relay_number: "{{ repeat.index }}"
            - service: rmg_rio4.pulse_relay
              data:
                entity_id: "switch.relais_{{ relay_number }}"
                duration: 0.5
            - delay: "00:00:01"

# ============================================
# CAPTEURS VIRTUELS BASÃ‰S SUR LES DIO
# ============================================

# Vous pouvez crÃ©er des capteurs binaires pour une meilleure sÃ©mantique

binary_sensor:
  - platform: template
    sensors:
      detecteur_vehicule:
        friendly_name: "DÃ©tecteur de vÃ©hicule"
        device_class: motion
        value_template: "{{ is_state('switch.dio_1', 'on') }}"
        icon_template: >-
          {% if is_state('switch.dio_1', 'on') %}
            mdi:car
          {% else %}
            mdi:car-off
          {% endif %}

      detecteur_mouvement:
        friendly_name: "DÃ©tecteur de mouvement"
        device_class: motion
        value_template: "{{ is_state('switch.dio_2', 'on') }}"

      contact_porte:
        friendly_name: "Contact de porte"
        device_class: door
        value_template: "{{ is_state('switch.dio_3', 'on') }}"

      capteur_humidite:
        friendly_name: "Capteur d'humiditÃ© sol"
        device_class: moisture
        value_template: "{{ is_state('switch.dio_4', 'on') }}"

# ============================================
# CONFIGURATION LOVELACE SUGGÃ‰RÃ‰E
# ============================================

# Ajoutez cette carte dans votre dashboard :
# 
# type: entities
# title: RMG Rio 4 - ContrÃ´le
# entities:
#   - entity: switch.relais_1
#     name: "ðŸšª Portail"
#     tap_action:
#       action: call-service
#       service: rmg_rio4.pulse_relay
#       service_data:
#         entity_id: switch.relais_1
#         duration: 1.0
#   - entity: switch.relais_2
#     name: "ðŸ’¡ Ã‰clairage extÃ©rieur"
#   - entity: switch.relais_3
#     name: "ðŸš¨ SirÃ¨ne d'alarme"
#   - entity: switch.relais_4
#     name: "ðŸŒ¿ Arrosage"
#   - type: divider
#   - entity: binary_sensor.detecteur_vehicule
#     name: "ðŸš— DÃ©tecteur vÃ©hicule"
#   - entity: binary_sensor.detecteur_mouvement
#     name: "ðŸš¶ DÃ©tecteur mouvement"
#   - entity: binary_sensor.contact_porte
#     name: "ðŸšª Contact porte"
#   - entity: binary_sensor.capteur_humidite
#     name: "ðŸ’§ HumiditÃ© sol"
#   - type: divider
#   - entity: script.ouvrir_portail
#   - entity: script.arret_urgence
#   - entity: script.test_relais

# ============================================
# INFORMATIONS SYSTÃˆME
# ============================================

# Votre boÃ®tier RMG Rio 4 :
# - NumÃ©ro de sÃ©rie : 1000000097badc1a
# - Firmware : 1.1.4
# - Hostname : RMG-1000000097badc1a
# - IP : 172.18.0.45
# - Port : 22023
# - Login : admin / Inloc+1300
# 
# Configuration matÃ©rielle dÃ©tectÃ©e :
# - 4 relais contrÃ´lables (RELAY1 Ã  RELAY4)
# - 4 entrÃ©es digitales (DIO1 Ã  DIO4) - lecture seule